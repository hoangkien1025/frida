name: CI

on: push

env:
  ANDROID_NDK_VERSION: r25b
  NODE_TARGETS_DEFAULT: '16.0.0 18.0.0 20.0.0 22.0.0'
  NODE_TARGETS_FREEBSD: '20.0.0'
  ELECTRON_TARGETS_DEFAULT: '31.0.0'
  ELECTRON_TARGETS_FREEBSD: '30.0.0'

jobs:
  publish-prod:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - package-ios
      - package-apple-universal
      - assemble-ios-assets
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
      - name: Grab needed submodules
        run: python tools/ensure-submodules.py frida-core frida-python frida-node
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y reprepro
          sudo npm install -g cloudflare-cli
      - name: Download release assets
        uses: actions/download-artifact@v4
        with:
          pattern: release-asset-*
          merge-multiple: true
          path: build/release-assets/
      - name: Package iOS assets
        uses: ./.github/actions/package-ios-assets
      - name: Rename release assets
        run: .github/scripts/rename-release-assets.sh
      - name: Publish release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          name: "Frida ${{ env.FRIDA_VERSION }}"
          body: "See https://frida.re/news/ for details."
          files: build/release-assets/*
     
  publish-dev:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - assemble-ios-assets
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
      - name: Grab needed submodules
        run: python tools/ensure-submodules.py frida-core frida-python
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y reprepro
          sudo npm install -g cloudflare-cli
      - name: Package iOS assets
        uses: ./.github/actions/package-ios-assets

  assemble-ios-assets:
    runs-on: macos-latest
    needs: frida-ios
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
          certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
          certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Download universal frida-server for iOS/arm64(e)
        uses: actions/download-artifact@v4
        with:
          name: frida-server-ios-arm64e
          path: ios-arm64e/
      - name: Create universal frida-server for iOS
        run: |
          lipo ios-arm64e/frida-server -thin arm64 -output frida-server-arm64
          lipo ios-arm64e/frida-server -thin arm64e -output frida-server-arm64e
          for arch in arm64 arm64e; do
            codesign -f -s "-" --preserve-metadata=entitlements frida-server-$arch
          done
          ./releng/mkfatmacho.py \
              frida-server-ios-universal \
              frida-server-arm64 \
              frida-server-arm64e
      - name: Download universal frida-agent for iOS/arm64(e)
        uses: actions/download-artifact@v4
        with:
          name: frida-agent-ios-arm64e
          path: ios-arm64e/
      - name: Sign universal frida-agent for iOS/arm64(e)
        run: codesign -f -s "-" ios-arm64e/frida-agent.dylib
      - name: Assemble iOS assets
        run: |
          mkdir -p ios-assets/usr/bin ios-assets/usr/lib/frida
          mv frida-server-ios-universal ios-assets/usr/bin/frida-server
          mv ios-arm64e/frida-agent.dylib ios-assets/usr/lib/frida/frida-agent.dylib
      - name: Upload iOS assets
        uses: actions/upload-artifact@v4
        with:
          name: ios-assets
          path: ios-assets/*
          
  package-apple-universal:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    needs: [frida-ios]
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
          certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
          certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Download frida-gadget for iOS/arm64(e)
        uses: actions/download-artifact@v4
        with:
          name: frida-gadget-ios-arm64e
          path: ios-arm64e/
      - name: Create universal frida-gadget for iOS
        run: |
          mv ios-arm64e/frida-gadget.dylib frida-gadget-ios-universal.dylib
          install_name_tool \
              -id @executable_path/Frameworks/FridaGadget.dylib \
              frida-gadget-ios-universal.dylib
          codesign \
              -f -s "$IOS_CERTID" \
              frida-gadget-ios-universal.dylib
      - name: Compress universal frida-gadget for iOS
        run: |
          gzip -k frida-gadget-ios-universal.dylib
          xz -T 0 frida-gadget-ios-universal.dylib
      - name: Upload universal frida-gadget for iOS (gz)
        uses: actions/upload-artifact@v4
        with:
          name: release-asset-frida-gadget-ios-universal-gz
          path: frida-gadget-ios-universal.dylib.gz
      - name: Upload universal frida-gadget for iOS (xz)
        uses: actions/upload-artifact@v4
        with:
          name: release-asset-frida-gadget-ios-universal-xz
          path: frida-gadget-ios-universal.dylib.xz
          
  package-ios:
    if: startsWith(github.ref, 'refs/tags/')
    needs: frida-ios
    strategy:
      matrix:
        arch: [arm64, arm64e]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Package Gum devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-gum-devkit-ios-${{ matrix.arch }}
      - name: Package GumJS devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-gumjs-devkit-ios-${{ matrix.arch }}
      - name: Package Core devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-core-devkit-ios-${{ matrix.arch }}
      - name: Package frida-portal
        if: ${{ !endsWith(matrix.arch, '-simulator') }}
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-portal-ios-${{ matrix.arch }}
          
  frida-ios:
    needs: [sdk-macos, sdk-ios]
    strategy:
      matrix:
        arch: [arm64, arm64e]
      fail-fast: false
    runs-on: macos-latest
    env:
      XCODE11: /Applications/Xcode_11.7.app
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
          certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
          certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Configure
        run: >-
          ./configure
          --prefix=/usr
          --host=ios-${{ matrix.arch }}
          --enable-portal
          --
          -Dfrida-gum:devkits=gum,gumjs
          -Dfrida-core:assets=installed
          -Dfrida-core:devkits=core
      - name: Compile
        run: make
      - name: Install
        run: DESTDIR="$FRIDA_PREFIX" make install
      - name: Upload Gum devkit
        uses: actions/upload-artifact@v4
        with:
          name: frida-gum-devkit-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/lib/frida/devkits/gum/
      - name: Upload GumJS devkit
        uses: actions/upload-artifact@v4
        with:
          name: frida-gumjs-devkit-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/lib/frida/devkits/gumjs/
      - name: Upload Core devkit
        uses: actions/upload-artifact@v4
        with:
          name: frida-core-devkit-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/lib/frida/devkits/core/
      - name: Upload frida-server
        if: ${{ matrix.arch != 'arm64' && !endsWith(matrix.arch, '-simulator') }}
        uses: actions/upload-artifact@v4
        with:
          name: frida-server-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/bin/frida-server
      - name: Upload frida-portal
        if: ${{ !endsWith(matrix.arch, '-simulator') }}
        uses: actions/upload-artifact@v4
        with:
          name: frida-portal-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/bin/frida-portal
      - name: Upload frida-inject
        if: ${{ !endsWith(matrix.arch, '-simulator') }}
        uses: actions/upload-artifact@v4
        with:
          name: frida-inject-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/bin/frida-inject
      - name: Upload frida-helper
        if: ${{ matrix.arch != 'arm64' && !endsWith(matrix.arch, '-simulator') }}
        uses: actions/upload-artifact@v4
        with:
          name: frida-helper-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/lib/frida/frida-helper
      - name: Upload frida-agent
        if: ${{ matrix.arch != 'arm64' && !endsWith(matrix.arch, '-simulator') }}
        uses: actions/upload-artifact@v4
        with:
          name: frida-agent-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/lib/frida/frida-agent.dylib
      - name: Upload frida-gadget
        if: matrix.arch != 'arm64'
        uses: actions/upload-artifact@v4
        with:
          name: frida-gadget-ios-${{ matrix.arch }}
          path: ${{ env.FRIDA_PREFIX }}/usr/lib/frida/frida-gadget.dylib

  toolchain-macos:
    strategy:
      matrix:
        arch: [arm64]
      fail-fast: false
    runs-on: macos-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
          certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
          certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Roll toolchain
        run: releng/deps.py roll toolchain macos-${{ matrix.arch }}

  sdk-macos:
    needs: toolchain-macos
    strategy:
      matrix:
        arch: [arm64, arm64e]
      fail-fast: false
    runs-on: macos-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
          certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
          certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Roll SDK
        run: releng/deps.py roll sdk macos-${{ matrix.arch }} --activate

  sdk-ios:
    needs: toolchain-macos
    strategy:
      matrix:
        arch: [arm64, arm64e]
      fail-fast: false
    runs-on: macos-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
          certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
          certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
      - name: Roll SDK
        run: releng/deps.py roll sdk ios-${{ matrix.arch }} --activate
